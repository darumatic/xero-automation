stages:
  - build
  - run-validate
  - run-report
  - run-close

build-master:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "Creating env file"
    - ./scripts/set_env.sh
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master
    - 14-external-repo  # just for testing, REMOVE this line

build-release:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "Creating env file"
    - ./scripts/set_env.sh
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
    - export TAG_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-`date +%Y%m%d-%H%M`
    - docker tag "$CI_REGISTRY_IMAGE" $TAG_IMAGE
    - docker push $TAG_IMAGE
  only:
    - release

run-validate:
  image: $CI_REGISTRY_IMAGE:latest
  stage: run-validate
  script:
    - export GITLAB_PRIVATE_TOKEN=$GITLAB_PRIVATE_TOKEN && export CI_PROJECT_ID=$CI_PROJECT_ID
    - python3 /app/xero_report.py validate --client-id=$CLIENT_ID --client-secret=$CLIENT_SECRET --refresh-token=$REFRESH_TOKEN --tenant-id=$TENANT_ID

run-report:
  image: $CI_REGISTRY_IMAGE:latest
  stage: run-report
  before_script:
    - apk add --no-cache --update openssh-client git unzip sshpass rsync
    - eval $(ssh-agent -s)
    - echo "$XERO_REPORT_REPO_SSH_KEY" | tr -d '\r' | ssh-add - > /dev/null

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - git config --global user.email $XERO_REPORT_REPO_USERMAIL
    - git config --global user.name $XERO_REPORT_REPO_USERNAME
  script:
    - export GITLAB_PRIVATE_TOKEN=$GITLAB_PRIVATE_TOKEN && export CI_PROJECT_ID=$CI_PROJECT_ID
    # Pull report repo
    - echo "Pulling external repo into build"
    - git clone $XERO_REPORT_REPO_ADDRESS
    - cd $XERO_REPORT_REPO_NAME
    # Create backup data folder
    - if [ ! -d backup-data  ];then
    - mkdir backup-data
    - fi
    # Create folder for this job's report
    - TIME=$(date | awk '{print $3 $2 $6}')"-"$(date | awk '{print $4}')
    - mkdir backup-data/$TIME

    # Generate report and json data
    - python3 /app/xero_report.py report --client-id=$CLIENT_ID --client-secret=$CLIENT_SECRET --refresh-token=$REFRESH_TOKEN --tenant-id=$TENANT_ID
    # Push to target repo
    - cp -Rf /app/out/ backup-data/$TIME
    - cd backup-data/$TIME && ls
    - git add .
    - git commit -m"update backup data"
    - git push
  when: manual

run-close:
  image: $CI_REGISTRY_IMAGE:latest
  stage: run-close
  script:
    - export GITLAB_PRIVATE_TOKEN=$GITLAB_PRIVATE_TOKEN && export CI_PROJECT_ID=$CI_PROJECT_ID
    - python3 /app/xero_report.py close --client-id=$CLIENT_ID --client-secret=$CLIENT_SECRET --refresh-token=$REFRESH_TOKEN --tenant-id=$TENANT_ID
  when: manual